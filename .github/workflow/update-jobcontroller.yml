name: Check for new image and create PR
on:
  schedule:
    - cron: '0 * * * *'  # Runs every hour

env:
  REGISTRY: ghcr.io
  ORG_NAME: ${{ github.repository_owner }}
  IMAGE: jobcontroller
  MANIFEST_PATH: ./components/jobcontroller/overlays/staging/jobcontroller.yml

jobs:
  check-and-update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check for new image
        id: check-image
        run: |
          # Use Docker Registry API to check for new image
          LATEST_TAG=$(curl -H "Authorization: Bearer ${TOKEN}" https://${REGISTRY}/v2/${ORG_NAME}/${IMAGE}/tags/list | jq -r '.tags[0]')
          echo "::set-output name=latest-tag::${LATEST_TAG}"

      - name: Update Kubernetes manifest
        run: |
          # Extract current image tag from Kubernetes manifest
          # This is just an example, replace with your own logic
          CURRENT_TAG=$(cat ${MANIFEST_PATH} | grep 'image:' | cut -d':' -f3)

          # If current tag is different from latest tag, update the manifest
          if [[ "${CURRENT_TAG}" != "${{ steps.check-image.outputs.latest-tag }}" ]]; then
            # Update Kubernetes manifest with new tag
            # This is just an example, replace with your own logic
            sed -i "s/${CURRENT_TAG}/${{ steps.check-image.outputs.latest-tag }}/g" ${MANIFEST_PATH}

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Update image tag to ${{ steps.check-image.outputs.latest-tag }}"
          branch: ${{ github.head_ref }}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5.0.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "Update image tag"
          body: "This PR updates the image tag in the Kubernetes manifest to ${{ steps.check-image.outputs.latest-tag }}"
