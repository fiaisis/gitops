name: Check for new image and create PR
on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 * * * *'  # Runs every hour

env:
  REGISTRY: ghcr.io
  ORG_NAME: ${{ github.repository_owner }}
  IMAGE: jobcontroller
  MANIFEST_PATH: components/jobcontroller/overlays/staging/jobcontroller.yml

jobs:
  check-and-update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check for new image
        id: check-image
        run: |
          # Use Docker Registry API to check for new image
          GHCR_TOKEN=$(echo ${{ secrets.GITHUB_TOKEN }} | base64)
          LATEST_TAG=$(curl -H "Authorization: Bearer ${GHCR_TOKEN}" https://${REGISTRY}/v2/${ORG_NAME}/${IMAGE}/tags/list | jq -r '.tags[0]')
          echo "Latest tag: ${LATEST_TAG}"
          echo "latest-tag=${LATEST_TAG}" >> $GITHUB_OUTPUT

      - name: Get Kubernetes manifest tag
        id: check-manifest
        run: |
          # Extract current image tag from Kubernetes manifest
          # This is just an example, replace with your own logic
          CURRENT_TAG=$(cat ${MANIFEST_PATH} | grep 'image:' | cut -d':' -f3)
          echo "Current Tag: ${CURRENT_TAG}"
          echo "current-tag=${CURRENT_TAG}" >> $GITHUB_OUTPUT

      - name: Update kubernetes manifest if current new tag
        run: |
          # If current tag is different from latest tag, update the manifest
          echo "Comparing current tag vs latest tag - "${{ steps.check-manifest.outputs.current-tag }} vs ${{ steps.check-image.outputs.latest-tag }}""
          if [[ "${{ steps.check-manifest.outputs.current-tag }}" != "${{ steps.check-image.outputs.latest-tag }}" ]] && [[ "$steps.check-image.outputs.latest-tag" != null ]]; then
            # Update Kubernetes manifest with new tag
            # This is just an example, replace with your own logic
            sed -i "s/"${{ steps.check-manifest.outputs.current-tag }}"/${{ steps.check-image.outputs.latest-tag }}/g" ${MANIFEST_PATH}
          fi

      - name: Create pull request
        uses: peter-evans/create-pull-request@v5.0.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Update ${IMAGE} "
          title: "Update ${IMAGE} to ${{ steps.check-image.outputs.latest-tag }}"
          body: "This PR updates the image tag in the Kubernetes manifest to ${{ steps.check-image.outputs.latest-tag }}"
