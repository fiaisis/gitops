---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: grafana
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://grafana.github.io/helm-charts
    targetRevision: 7.3.3
    chart: grafana
    helm:
      values: |
        envValueFrom: {
          INFLUXDB_USERNAME:
            secretKeyRef:
              name: grafana-creds
              key: influxDBReadUsername
          INFLUXDB_PASSWORD:
            secretKeyRef:
              name: grafana-creds
              key: influxDBReadPassword
          LOKI_USERNAME
            secretKeyRef:
              name: grafana-creds
              key: lokiUsername
          LOKI_PASSWORD
            secretKeyRef:
              name: grafana-creds
              key: lokiPassword
        }
        service:
          type: LoadBalancer
          loadBalancerIP: "130.246.80.52"
        persistence:
          enabled: true
        plugins:
          - grafana-oncall-app
        datasources:
          datasources.yaml:
            apiVersion: 1
            datasources:
              - name: Prod-InfluxDB
                type: influxdb
                access: proxy
                url: https://influxdb06.gridpp.rl.ac.uk
                user: $INFLUXDB_USERNAME
                jsonData:
                  dbName: isis
                  httpMode: GET
                secureJsonData:
                  password: $INFLUXDB_PASSWORD
              - name: Prod-Cloud-Loki
                type: loki
                access: proxy
                url: https://logs-prod-eu-west-0.grafana.net
                basicAuth: true
                basicAuthUser: $LOKI_USERNAME
                jsonData:
                  timeout: 60
                  maxLines: 1000
                secureJsonData:
                  basicAuthPassword: $LOKI_PASSWORD          
        admin:
          existingSecret: grafana-creds
          userKey: username
          passwordKey: password
#        alerting:
#      dashboards:
#        default:
#          some-dashboard:
#            json: |
#              {
#                "annotations":
#
#                ...
#                # Complete json file here
#                ...
#
#                "title": "Some Dashboard",
#                "uid": "abcd1234",
#                "version": 1
#              }
#          custom-dashboard:
#            # This is a path to a file inside the dashboards directory inside the chart directory
#            file: dashboards/custom-dashboard.json
#          prometheus-stats:
#            # Ref: https://grafana.com/dashboards/2
#            gnetId: 2
#            revision: 2
#            datasource: Prometheus
#          loki-dashboard-quick-search:
#            gnetId: 12019
#            revision: 2
#            datasource:
#              - name: DS_PROMETHEUS
#                value: Prometheus
#              - name: DS_LOKI
#                value: Loki
#          local-dashboard:
#            url: https://raw.githubusercontent.com/user/repository/master/dashboards/dashboard.json
  destination:
    namespace: grafana
    server: https://kubernetes.default.svc
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - ServerSideApply=true
      - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: grafana-extras-management
  namespace: argocd
spec:
  destination:
    namespace: grafana
    server: https://kubernetes.default.svc
  project: default
  source:
    path: components/grafana
    repoURL: https://github.com/interactivereduction/gitops.git
    targetRevision: HEAD
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true