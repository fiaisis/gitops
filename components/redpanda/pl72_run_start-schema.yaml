apiVersion: schemas.vectorized.io/v1alpha2
kind: Schema
metadata:
  name: pl72_run_start
spec:
  subject: pl72_run_start-value
  schemaType: flatbuffers
  schema: "// Run start message\n//\n// Typical producers and consumers:\n// Produced\
    \ by NICOS and NeXus-Streamer\n// Consumed by NeXus file writer - to trigger start\
    \ of file writing\n// Consumed by Mantid - marks the start of a run, Mantid has\
    \ various options for\n//                      runs, such as stopping listening\
    \ at the end of the current\n//                      run or populating a new workspace\
    \ for each new run\n\ninclude \"df12_det_spec_map.fbs\";\n\nfile_identifier \"\
    pl72\";\n\ntable RunStart {                                     //  *Mantid* \
    \   // *File Writer* // *Description*\n    start_time : uint64;              \
    \               //  Required    //  Required     // milliseconds since Unix epoch\
    \ (1 Jan 1970)\n    stop_time : uint64;                              //  Unused\
    \      //  Optional     // milliseconds since Unix epoch (1 Jan 1970), optional,\
    \ can send a RunStop instead\n    run_name : string;                         \
    \      //  Required    //  Unused       // Name for the run, used as workspace\
    \ name by Mantid\n    instrument_name : string;                        //  Required\
    \    //  Unused       // Name of the instrument, only required by Mantid\n   \
    \ nexus_structure : string;                        //  Optional    //  Required\
    \     // JSON description of NeXus file (See https://github.com/ess-dmsc/kafka-to-nexus/\
    \ for detail)\n                                                              \
    \                        // If present Mantid will parse this to get the instrument\
    \ geometry, otherwise it will attempt\n                                      \
    \                                                // to look up an Instrument Definition\
    \ File (IDF) based on the instrument name\n    job_id : string;              \
    \                   //  Unused      //  Required     // Uuid for the file writing\
    \ job, serves as job-id.\n    broker : string;                               \
    \  //  Unused      //  Unused       // (Obsolete) Broker name and port, for example\
    \ \"localhost:9092\", from which the file writer should get data\n    service_id\
    \ : string;                             //  Unused      //  Optional     // The\
    \ identifier for the instance of the file-writer that should handle this command\n\
    \    filename : string;                               //  Unused      //  Required\
    \     // Name of the file to write, for example run_1234.nxs\n    n_periods :\
    \ uint32 = 1;                          //  Optional    //  Unused       // Number\
    \ of periods (ISIS only)\n                                                   \
    \                                   // Periods provide a way to segregate data\
    \ at the data acquisition stage\n    detector_spectrum_map: SpectraDetectorMapping;\
    \   //  Optional    //  Unused       // Map spectrum numbers in the event messages\
    \ to detector IDs in the instrument definition (optional, for ISIS only)\n   \
    \ metadata : string;                               //  Unused      //  Optional\
    \     // Holds a JSON string with (static) metadata about the measurement. E.g.\
    \ proposal id.\n    control_topic : string;                          //  Unused\
    \      //  Optional     // Topic on which the File Writer will listen for further\
    \ commands and publish status messages when started from a pool\n}\n\nroot_type\
    \ RunStart;\n"
